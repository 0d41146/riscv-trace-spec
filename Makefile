# Variables
SPEC_TEX := riscv-trace-spec
SPEC_PDF := $(SPEC_TEX).pdf
INCLUDES_TEX := introduction.tex branchTrace.tex exampleAlgorithm.tex filtering.tex timestamping.tex ingressPort.tex payload.tex dataTracePayload.tex control.tex preamble.tex riscv-trace-spec.tex decoder.tex discovery.tex exampleCodeSnippets.tex fragmentCodeAndTransport.tex future.tex

# Main Targets
all: $(SPEC_PDF)

publish: $(SPEC_PDF)
	cp $< $(SPEC_TEX)-`git rev-parse --abbrev-ref HEAD`.`git rev-parse --short HEAD`.pdf

clean:
	rm -f $(SPEC_PDF) *.aux *.toc *.log *.idx *.ilg *.ind *.lof *.lot *.out *.pdf

# Recipe for building the PDF
$(SPEC_PDF): $(SPEC_TEX).tex $(INCLUDES_TEX) vc.tex
	echo $(SPEC_TEX)
	pdflatex -shell-escape $< && makeindex $(SPEC_TEX) && pdflatex -shell-escape $<

# Recipe for generating vc.tex with Git version control information
vc.tex: .git/logs/HEAD
	echo "%%% This file is generated by Makefile." > vc.tex
	echo "%%% Do not edit this file!\n%%%" >> vc.tex
	git log -1 --format="format:\
	    \\gdef\\GITHash{%H}\
	    \\gdef\\GITAbrHash{%h}\
	    \\gdef\\GITAuthorDate{%ad}\
	    \\gdef\\GITAuthorName{%an}" >> vc.tex

# Recipe for generating changelog.tex from Git logs
changelog.tex: .git/logs/HEAD Makefile
	echo "%%% This file is generated by Makefile." > changelog.tex
	echo "%%% Do not edit this file!\n%%%" >> changelog.tex
	git log --no-merges --date=short --pretty="format:vhEntry{%h}{%ad}{%an}{%s}" | \
	    sed -e "s,\\\\,{\\\\textbackslash},g" -e "s,[_#^],\\\\&,g" -e s/^/\\\\/ >> changelog.tex